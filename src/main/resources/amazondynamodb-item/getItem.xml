<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="getItem" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="key"
               description="A map of attribute names to AttributeValue objects, representing the primary key of the item
               to retrieve."/>
    <parameter name="tableName" description="The name of the table containing the requested item."/>
    <parameter name="attributesToGet" description="The names of one or more attributes to retrieve."/>
    <parameter name="consistentRead" description="Determines the read consistency model."/>
    <parameter name="expressionAttributeNames"
               description="One or more values that can be substituted in an expression."/>
    <parameter name="projectionExpression"
               description="A string that identifies one or more attributes to retrieve from the table."/>
    <parameter name="returnConsumedCapacity"
               description="Determines the level of detail about provisioned throughput consumption that is returned in
               the response."/>
    <parameter name="responseVariable" description="The name of the variable to which the response should be stored."/>
    <parameter name="overwriteBody" description="Replace the Message Body in Message Context with the response of the operation."/>
    <sequence>
        <property name="target" value="DynamoDB_20120810.GetItem"/>
        <property name="key" expression="$func:key"/>
        <property name="tableName" expression="$func:tableName"/>
        <property name="attributesToGet" expression="$func:attributesToGet"/>
        <property name="consistentRead" expression="$func:consistentRead"/>
        <property name="expressionAttributeNames" expression="$func:expressionAttributeNames"/>
        <property name="projectionExpression" expression="$func:projectionExpression"/>
        <property name="returnConsumedCapacity" expression="$func:returnConsumedCapacity"/>
        <class name="org.wso2.carbon.connector.amazdynamodb.auth.AmazonDynamoDBAuthConnector"/>
        <!-- Add authorization and date header parameters -->
        <header name="Authorization" scope="transport" expression="$ctx:authorizationHeader"/>
        <header name="X-Amz-Date" scope="transport" expression="$ctx:amzDate"/>
        <header name="X-Amz-Target" scope="transport" expression="$ctx:target"/>
        <payloadFactory media-type="json">
            <format>
                $1
            </format>
            <args>
                <arg expression="$ctx:requestPayload"/>
            </args>
        </payloadFactory>
        <property name="messageType" value="application/x-amz-json-1.0" scope="axis2"/>
        <filter source="$ctx:amazonDynamoDbBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="POST" uri-template="{uri.var.apiUrl}{+uri.var.httpRequestUri}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="POST" uri-template="{uri.var.apiUrl}{+uri.var.httpRequestUri}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
        <!-- Remove custom header information in response -->
        <header name="x-amzn-RequestId" scope="transport" action="remove"/>
        <header name="Via" scope="transport" action="remove"/>
    </sequence>
</template>